#!/usr/bin/env python
# encoding: utf-8
"""
fabfile.py

Created by Sergey Safonov on 2010-07-22.
Copyright (c) 2010. All rights reserved.
"""
 
config.project_name = '{{ project_name }}'
 
# environments
 
def production():
    config.fab_hosts = ['{{ site_name }}']
    config.site_name = '{{ site_name }}'
    config.path = '{{ production_root }}'

prod = production

def setup():
    """
    Setup a fresh virtualenv as well as a few useful directories, then run
    a full deployment
    """
    require('fab_hosts', provided_by=[production])
    require('path')
    
    sudo('mkdir -p $(path); cd $(path); virtualenv --no-site-packages .; chown $(fab_user):$(fab_user) -R $(path)')
    run('cd $(path); mkdir releases logs packages storage;', fail='ignore')
    deploy()

def deploy():
    """
    Deploy the latest version of the site to the servers, install any
    required third party modules, install the virtual host and 
    then restart the webserver
    """
    require('fab_hosts', provided_by=[production])
    require('path')
    
    import time
    config.release = time.strftime('%Y%m%d%H%M%S')
    
    upload_tar_from_git()
    install_requirements()
    symlink_current_release()
    sync_db()
    update_supervisord()
    copy_nginx_conf()
    reload_nginx()

def update():
    require('fab_hosts', provided_by=[production])
    require('path')
    
    import time
    config.release = time.strftime('%Y%m%d%H%M%S')
    
    upload_tar_from_git()
    install_requirements()
    symlink_current_release()
    sync_db()
    update_supervisord()
    copy_nginx_conf()
    reload_nginx()

def upload_tar_from_svn():
    "Create an archive from the current svn trunk branch and upload it"
    local('rm -rf /tmp/svnexport/;svn export . /tmp/svnexport')
    local('tar -C /tmp/svnexport/ -czvf $(project_short_name)_$(release).tar.gz .')
    run('mkdir -p $(path)/releases/$(release)/$(project_name)')
    put('$(project_name)_$(release).tar.gz', '$(path)/packages/')
    run('cd $(path)/releases/$(release)/$(project_name) && tar zxf ../../../packages/$(project_name)_$(release).tar.gz')
    #run('rm $(path)/packages/$(project_name)_$(release).tar.gz')
    local('rm $(project_name)_$(release).tar.gz')
    
def upload_tar_from_git():
    "Create an archive from the current Git master branch and upload it"
    local('git archive --format=tar master | gzip > $(release).tar.gz')
    run('mkdir -p $(path)/releases/$(release)/$(project_name)')
    put('$(release).tar.gz', '/home/$(fab_user)')
    run('cp ~/$(release).tar.gz $(path)/packages/')
    run('rm ~/$(release).tar.gz')
    run('cd $(path)/releases/$(release)/$(project_name) && tar zxf ../../../packages/$(release).tar.gz')
    run('ln -s $(path)/storage $(path)/releases/$(release)/$(project_name)/media/storage')
    local('rm $(release).tar.gz')

def install_requirements():
    "Install the required packages from the requirements file using pip"
    require('release', provided_by=[deploy, setup, update])
    require('path')
    run('cd $(path); pip install -E . -r ./releases/$(release)/$(project_name)/{{ requirements_file }}')

def sync_db():
    require('release', provided_by=[deploy, setup, update])
    require('path')
    run('source $(path)/bin/activate; cd $(path)/$(project_name); python manage.py syncdb --noinput; python manage.py migrate')

def symlink_current_release():
    "Symlink our current release"
    require('release', provided_by=[deploy, setup, update])
    require('path')
    run('cd $(path); rm -f $(project_name)/media/storage; rm -f $(project_name); ln -s releases/$(release)/$(project_name) $(project_name)')

def chown_media():
    require('release', provided_by=[deploy, setup, update])
    sudo('cd $(path)/releases/$(release); chown -R $(fab_user):www-data media/;')
    
def restart_fastcgi_server():
    "Restart the fastcgi server"
    require('release', provided_by=[deploy, setup, update])
    require('path')
    require('init_script')
    #run('source $(path)/bin/activate; $(path)/releases/$(release)/$(project_name)/$(init_script) restart')
    

def copy_nginx_conf():
    "Copy config files to nginx"
    require('release', provided_by=[deploy, setup, update])
    require('path')
    require('site_name')
    sudo('cp $(path)/$(project_name)/conf/$(site_name).conf /etc/nginx/sites-available/')
    sudo('ln -s /etc/nginx/sites-available/$(site_name).conf /etc/nginx/sites-enabled/$(site_name).conf', fail='ignore')

def reload_nginx():
    require('release', provided_by=[deploy, setup, update])
    sudo('/etc/init.d/nginx reload')

def update_supervisord():
    require('release', provided_by=[deploy, setup, update])
    sudo('cd $(path)/$(project_name); cp conf/$(project_name).svd /etc/supervisord/')
    sudo('supervisorctl stop $(project_name)')
    sudo('supervisorctl update')
    sudo('supervisorctl start $(project_name)')

